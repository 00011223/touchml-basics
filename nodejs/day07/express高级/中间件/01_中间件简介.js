/* 
    中间件(Middleware):是一个采用责任链模式夹杂在我们的客户端请求-服务端响应中间的一种中间处理手段

    作用：在访问指定接口之前或之后的一个自定义方法，这就是中间件  
    中间件的本质就是一个方法或者函数！


    中间件的存在更多的是让后端开发关注和处理一些细节性的逻辑任务
    经过中间件处理后，我们可以将更多的精力主要集中在核心的业务逻辑上！

    中间件特点：
        - 既然叫中间件，它是可以夹在请求和响应之间的
        - 责任链：这是个设计模式，调用到自己的方法时，如符合处理条件，就自行处理！否则传递给下一个中间件

        - 方法(function):中间件就是方法、函数
        - 有序：中间件代码是有顺序的，放的位置不一样，调用的时机也不同

        注意：在实际的开发中客户端的一次请求基本上会经过多个中间件的处理！
        最终才会将结果响应给客户端

        中间件根据类型不同可以进行分类：
            大致分为4类中间件：
                - 内置中间件 web框架中内置的中间件
                - 自定义中间件：自己定义的中间件
                - 第三方中间件： 第三方定义的中间件
                - 错误处理中间件： 处理错误和异常的中间件
            注意：不管是哪一类中间件，其本质上就是一个处理请求的方法而已！

        中间件在作用范围上可以分为两类：
            - 应用级中间件  语法  app.use
            - 路由级中间件  语法  router.use
*/